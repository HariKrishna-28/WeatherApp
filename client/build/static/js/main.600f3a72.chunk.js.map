{"version":3,"sources":["FormInfo.jsx","App.js","index.js"],"names":["FormInfo","useState","weatherData","setWeatherData","nameRef","useRef","name","setName","loading","setLoading","loadAni","setLoadAni","url","setUrl","hStyle","color","useEffect","axios","get","then","res","data","success","current","value","weatherIcon","weather","icon","console","log","className","type","ref","id","autoFocus","required","onClick","e","preventDefault","CountryName","charAt","toUpperCase","slice","length","src","alt","width","coord","lon","style","lat","description","main","pressure","temp","humidity","sea_level","grnd_level","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6LAmJeA,EAzIE,WACb,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACMC,EAAUC,mBAChB,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BR,oBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsBV,mBAAS,IAA/B,mBAAOW,EAAP,KAAYC,EAAZ,KAGMC,EAAS,CACXC,MAAO,sBA6BX,OAzBAC,qBAAU,WAENC,IAAMC,IAAN,UAnBQ,gDAmBR,oBAAgCZ,IAAQa,MAAK,SAAAC,GAGzC,GAFAjB,EAAeiB,EAAIC,OAEM,IAArBD,EAAIC,KAAKC,QACTb,GAAW,OACR,CACHL,EAAQmB,QAAQC,MAAQ,GACxBf,GAAW,GACXE,GAAW,GACX,IAAMc,EAAcL,EAAIC,KAAKK,QAAQ,GAAGC,KACxCd,EAAO,oCAAD,OAAqCY,EAArC,kBAOf,CAACnB,IAIJsB,QAAQC,IAAI3B,GAGR,qCAEI,qBAAK4B,UAAU,6DAAf,SAEI,qBAAKA,UAAU,gEAAf,SAEI,iCAEI,sBAAKA,UAAU,yBAAf,UAEI,qBAAKA,UAAU,wCAAf,SACI,uBAAOA,UAAU,qCAAjB,kCAGJ,uBACIC,KAAK,OACLC,IAAK5B,EACL0B,UAAU,6HACVG,GAAG,WACH3B,KAAK,WACL4B,WAAS,EACTC,UAAQ,OAIhB,qBAAKL,UAAU,mCAAf,SAEI,wBACIA,UAAU,sIACVC,KAAK,SAELK,QAAS,SAACC,GAENA,EAAEC,iBACF,IAAMC,EAAcnC,EAAQmB,QAAQC,MAAMgB,OAAO,GAAGC,cAAgBrC,EAAQmB,QAAQC,MAAMkB,MAAM,GAC5FH,IAAgBjC,GAA+B,IAAvBiC,EAAYI,SACpCpC,EAAQgC,GACR5B,GAAW,KAVvB,6BA0BhB,qBAAKmB,UAAU,mCAAf,SAEKpB,GAAWF,EAAU,cAAC,IAAD,CAAaO,MAAM,qBAAqBe,UAAU,SACnEtB,EACGA,GAGI,sBAAKsB,UAAU,gBAAf,UAEI,sBAAKA,UAAU,4CAAf,UACI,oBAAIA,UAAU,qBAAd,0BACA,qBAAKc,IAAKhC,EAAKiC,IAAI,UAAUC,MAAM,WAGvC,sBAAKhB,UAAU,mDAAf,UACI,4CAAexB,KACf,gDAAmBJ,EAAY6C,MAAMC,IAArC,IAA0C,sBAAMC,MAAOnC,EAAb,iBAA1C,KAA4EZ,EAAY6C,MAAMG,IAA9F,IAAmG,sBAAMD,MAAOnC,EAAb,oBACnG,4CAAeZ,EAAYwB,QAAQ,GAAGyB,eACtC,8CAAiBjD,EAAYkD,KAAKC,SAAlC,IAA4C,sBAAMJ,MAAOnC,EAAb,mBAC5C,gDAAmBZ,EAAYkD,KAAKE,KAApC,IAA0C,sBAAML,MAAOnC,EAAb,uBAC1C,8CAAiBZ,EAAYkD,KAAKG,SAAlC,IAA4C,sBAAMN,MAAOnC,EAAb,mBAC5C,+CAAkBZ,EAAYkD,KAAKI,UAAnC,IAA8C,sBAAMP,MAAOnC,EAAb,mBAC9C,kDAAqBZ,EAAYkD,KAAKK,WAAtC,IAAkD,sBAAMR,MAAOnC,EAAb,yBAnBtD,oBAAIgB,UAAU,cAAd,qEC7FjB4B,MARf,WACE,OACE,mCACE,cAAC,EAAD,OCFNC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.600f3a72.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\r\nimport axios from \"axios\"\r\nimport ScaleLoader from \"react-spinners/ScaleLoader\"\r\n\r\n\r\n// const baseUrl = \"http://localhost:5000\"\r\n// Heroku server\r\nconst baseUrl = \"https://weather-app-using-api28.herokuapp.com\"\r\n\r\n\r\nconst FormInfo = () => {\r\n    const [weatherData, setWeatherData] = useState([])\r\n    const nameRef = useRef()\r\n    const [name, setName] = useState([])\r\n    const [loading, setLoading] = useState(false)\r\n    const [loadAni, setLoadAni] = useState(false)\r\n    const [url, setUrl] = useState(\"\")\r\n\r\n\r\n    const hStyle = {\r\n        color: \"rgba(139, 92, 246)\",\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        axios.get(`${baseUrl}/weather/${name}`).then(res => {\r\n            setWeatherData(res.data)\r\n\r\n            if (res.data.success === false) {\r\n                setLoading(false)\r\n            } else {\r\n                nameRef.current.value = \"\";\r\n                setLoading(true)\r\n                setLoadAni(false)\r\n                const weatherIcon = res.data.weather[0].icon\r\n                setUrl(`http://openweathermap.org/img/wn/${weatherIcon}@2x.png`)\r\n            }\r\n            // console.log(\"rendered useEffect\");\r\n\r\n\r\n        })\r\n        // eslint-disable-next-line\r\n    }, [name])\r\n\r\n\r\n\r\n    console.log(weatherData)\r\n\r\n    return (\r\n        <>\r\n\r\n            <div className=\"flex justify-center items-center py-10 bg-black text-white\">\r\n\r\n                <div className=\"container p-10 rounded bg-purple-800 text-white mx-6 lg:mx-48\">\r\n\r\n                    <form >\r\n\r\n                        <div className=\"grid grid-cols-1 gap-4\">\r\n\r\n                            <div className=\"flex justify-center align-center pt-2\">\r\n                                <label className=\"text-2xl font-semibold text-center\">Enter Country Name</label>\r\n                            </div>\r\n\r\n                            <input\r\n                                type='text'\r\n                                ref={nameRef}\r\n                                className=\"shadow appearance-none leading-tight focus:outline-none focus:shadow-outline rounded mx-0 lg:mx-24 text-gray-800 px-2 py-1\"\r\n                                id='cityName'\r\n                                name='cityName'\r\n                                autoFocus\r\n                                required />\r\n\r\n                        </div>\r\n\r\n                        <div className=\"flex justify-center align-center\">\r\n\r\n                            <button\r\n                                className=\"bg-green-700 hover:bg-green-600 w-auto px-5 mt-6 py-2 font-semibold rounded shadow appearance-none leading-tight focus:outline-none\"\r\n                                type=\"submit\"\r\n\r\n                                onClick={(e) => {\r\n\r\n                                    e.preventDefault()\r\n                                    const CountryName = nameRef.current.value.charAt(0).toUpperCase() + nameRef.current.value.slice(1);\r\n                                    if (CountryName !== name && CountryName.length !== 0) {\r\n                                        setName(CountryName)\r\n                                        setLoadAni(true)\r\n                                    }\r\n\r\n                                    // console.log(name)\r\n                                }}\r\n                            >\r\n                                Submit\r\n                            </button>\r\n\r\n                        </div>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex justify-center align-center\">\r\n\r\n                {loadAni && loading ? <ScaleLoader color=\"rgba(139, 92, 246)\" className=\"mt-5\" /> :\r\n                    !loading ? (<h1 className=\"text-center\">Enter the location in the box to know the weather</h1>) :\r\n                        loading &&\r\n                        (\r\n\r\n                            <div className=\"font-semibold\">\r\n\r\n                                <div className=\"flex flex-row justify-center align-center\">\r\n                                    <h1 className=\"text-4xl pb-2 mt-5\">Weather Data</h1>\r\n                                    <img src={url} alt=\"weather\" width=\"100\" />\r\n                                </div>\r\n\r\n                                <div className=\"grid grid-cols-1 lg:grid-cols-2 pt-3 gap-4 mb-10\">\r\n                                    <h3>Country : {name}</h3>\r\n                                    <h3>Coordinates : {weatherData.coord.lon} <span style={hStyle}>lon</span>  {weatherData.coord.lat} <span style={hStyle}>lat</span></h3>\r\n                                    <h3>Weather : {weatherData.weather[0].description}</h3>\r\n                                    <h2>Pressure  : {weatherData.main.pressure} <span style={hStyle}>Pa</span></h2>\r\n                                    <h2>Temperature : {weatherData.main.temp} <span style={hStyle}>Â°C </span></h2>\r\n                                    <h2>Humidity  : {weatherData.main.humidity} <span style={hStyle}>% </span></h2>\r\n                                    <h2>Sea Level  : {weatherData.main.sea_level} <span style={hStyle}>m </span></h2>\r\n                                    <h2>Ground Level  : {weatherData.main.grnd_level} <span style={hStyle}>m </span></h2>\r\n\r\n                                    {/* <h2>Wind: <br />\r\n                                Speed : {weatherData.wind.speed} <br />\r\n                                Degree : {weatherData.wind.deg}<br />\r\n                                gust : {weatherData.wind.gust}<br />\r\n\r\n                            </h2> */}\r\n                                </div>\r\n\r\n                            </div>\r\n                        )\r\n                }\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormInfo\r\n","// import logo from './logo.svg';\n// import './App.css';\n\nimport FormInfo from \"./FormInfo\";\n\nfunction App() {\n  return (\n    <>\n      <FormInfo />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}